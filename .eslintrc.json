{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "globals": {
    "React": true,
    "JSX": "readonly",
    "process": "readonly"
  },
  "extends": [
    "airbnb-typescript/base",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "eslint:recommended",
    "plugin:prettier/recommended"
  ],
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "prettier",
    "unused-imports",
    "import",
    "eslint-plugin-import"
  ],
  "rules": {
    "import/prefer-default-export": "off",
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      { "vars": "all", "args": "after-used", "ignoreRestSiblings": true }
    ],
    "sort-imports": [
      "warn",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": ["none", "all", "multiple", "single"],
        "allowSeparatedGroups": true
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "": "never",
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "@typescript-eslint/default-param-last": "off",
    "no-case-declarations": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variableLike",
        "format": ["camelCase", "snake_case", "UPPER_CASE", "PascalCase"]
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"]
      }
    ],
    "import/no-extraneous-dependencies": [
      "warn",
      {
        "devDependencies": false,
        "optionalDependencies": false,
        "peerDependencies": false
      }
    ],
    "no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": false
      }
    ],
    "no-unused-expressions": "warn",
    "@typescript-eslint/no-unused-expressions": "warn",
    "no-use-before-define": "warn",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["warn"],
    "react-hooks/exhaustive-deps": "off",
    "no-unsafe-optional-chaining": "warn",
    "no-useless-escape": "warn"
  }
}
